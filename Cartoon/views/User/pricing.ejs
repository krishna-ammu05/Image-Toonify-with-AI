<% layout('User/user_Boilerplate') -%>

<section class="container mt-5">
  <h2 class="text-center mb-4 fw-bold">
    üîë Subscription Plans (Unlimited Access)
  </h2>

  <div class="row g-4 justify-content-center">
    <!-- Monthly Plan -->
    <div class="col-md-4">
      <div class="card shadow h-100">
        <div class="card-body d-flex flex-column">
          <h5 class="card-title fw-bold">Monthly</h5>
          <p class="card-text text-muted">Pay month by month</p>
          <h3 class="fw-bold">‚Çπ799 <small class="text-muted">/month</small></h3>
          <ul class="list-unstyled mt-3 mb-4 flex-grow-1">
            <li>‚úî Unlimited image transforms</li>
            <li>‚úî All styles & filters</li>
            <li>‚úî Cancel anytime</li>
          </ul>
          <button
            class="btn btn-primary"
            onclick="startPayment(799, 'monthly')"
          >
            Buy Monthly (‚Çπ799)
          </button>
        </div>
      </div>
    </div>

    <!-- 6-Month Plan -->
    <div class="col-md-4">
      <div class="card border-danger shadow h-100">
        <div class="card-body d-flex flex-column">
          <span class="badge bg-danger mb-2">Best Value</span>
          <h5 class="card-title fw-bold">6-Month Plan</h5>
          <p class="card-text text-muted">Save 20% vs monthly</p>
          <h3 class="fw-bold">‚Çπ4,199 <small class="text-muted">/6mo</small></h3>
          <ul class="list-unstyled mt-3 mb-4 flex-grow-1">
            <li>‚úî Unlimited image transforms</li>
            <li>‚úî Priority processing</li>
            <li>‚úî Cancel anytime</li>
          </ul>
          <button class="btn btn-danger" onclick="startPayment(4199, '6month')">
            Buy 6-Month (‚Çπ4199)
          </button>
        </div>
      </div>
    </div>

    <!-- Annual Plan -->
    <div class="col-md-4">
      <div class="card shadow h-100">
        <div class="card-body d-flex flex-column">
          <h5 class="card-title fw-bold">Annual Plan</h5>
          <p class="card-text text-muted">Save 30% vs monthly</p>
          <h3 class="fw-bold">‚Çπ7,999 <small class="text-muted">/yr</small></h3>
          <ul class="list-unstyled mt-3 mb-4 flex-grow-1">
            <li>‚úî Unlimited image transforms</li>
            <li>‚úî Highest resolution outputs</li>
            <li>‚úî Priority support</li>
          </ul>
          <button
            class="btn btn-success"
            onclick="startPayment(7999, 'annual')"
          >
            Buy Annual (‚Çπ7999)
          </button>
        </div>
      </div>
    </div>
  </div>
</section>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
  // 1Ô∏è‚É£ Function called when user clicks Buy button
  async function startPayment(amount, planType) {
    try {
      // ‚úÖ Send request to backend to create an order
      const res = await fetch("/payment/create-order", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ amount, plan: planType }),
      });

      const order = await res.json();

      if (order.id) {
        // 2Ô∏è‚É£ Open Razorpay checkout
        openRazorpay(order);
      } else {
        alert("Error creating order");
      }
    } catch (err) {
      console.error("Payment error:", err);
      alert("Something went wrong while starting payment");
    }
  }

  function openRazorpay(order) {
    var options = {
      key: "<%= process.env.RAZORPAY_KEY_ID %>", // Your Razorpay key
      amount: order.amount,
      currency: order.currency,
      name: "My App",
      description: "Subscription Payment",
      order_id: order.id,
      handler: function (response) {
        // ‚úÖ Send payment details to backend for verification
        fetch("/payment/verify-payment", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(response),
        })
          .then((res) => {
            if (res.redirected) {
              // ‚úÖ Redirect user to dashboard
              window.location.href = res.url;
            } else {
              return res.json();
            }
          })
          .then((data) => {
            if (data && !data.success) {
              alert("Payment verification failed: " + data.message);
            }
          })
          .catch((err) => {
            console.error("Verification error:", err);
            alert("Something went wrong while verifying payment");
          });
      },
    };
    var rzp = new Razorpay(options);
    rzp.open();
  }
</script>
