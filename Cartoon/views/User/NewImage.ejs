<% layout('User/user_Boilerplate') -%>

<section class="container-fluid py-5">
  <h2 class="text-center fw-bold text-gradient mb-5">
    üì§ Upload & Convert Image
  </h2>

  <div class="row justify-content-center">
    <div class="col-lg-8 col-md-10">
      <div class="card shadow-lg border-0 rounded-5">
        <div class="card-body p-5">
          <!-- Upload Form -->
          <form
            action="/<%= user.username %>/upload"
            method="POST"
            enctype="multipart/form-data"
          >
            <!-- Title Input -->
            <div class="mb-4">
              <label for="title" class="form-label fw-semibold"><h5> üìùImage Title</h5></label>
              <input
                type="text"
                name="title"
                id="title"
                class="form-control form-control-lg rounded-pill"
                placeholder="Enter a title for your image"
                required
              />
            </div>

            <!-- File Upload -->
            <div class="mb-4">
              <label for="image" class="form-label fw-semibold"><h5>üñº Select Image</h5></label>
              <input
                type="file"
                name="image"
                id="image"
                class="form-control form-control-lg rounded-pill"
                required
              />
            </div>

            <!-- Method Selection -->
            <div class="mb-4 text-center">
              <label class="form-label fw-semibold"><h4>‚öô Choose Processing Method</h4></label>
              <div class="method-toggle mt-3">
                <input type="radio" name="method" id="manual" value="manual" checked />
                <label for="manual" class="toggle-card">
                  <span class="icon">üéõ</span>
                  <span class="text">Manual</span>
                </label>

                <input type="radio" name="method" id="ai" value="ai" />
                <label for="ai" class="toggle-card">
                  <span class="icon">ü§ñ</span>
                  <span class="text">AI</span>
                </label>
              </div>
            </div>

            <!-- Style Selection -->
            <div class="mb-4">
              <label class="form-label fw-semibold"><h5>üé® Choose Style</h5></label>
              <div class="style-marquee">
                <div id="style-options" class="d-flex gap-4"></div>
              </div>
              <input type="hidden" name="style" id="selected-style" required />
            </div>

            <!-- Submit Button -->
            <div class="text-center">
              <button
                type="submit"
                class="btn btn-gradient btn-lg rounded-pill fw-bold px-5"
              >
                üöÄ Convert Now
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>

  <!-- Show results only if processed image exists -->
  <% if (outputImage) { %>
  <div class="row mt-5 justify-content-center">
    <div class="col-lg-8">
      <div class="card shadow-lg border-0 rounded-4 p-4">
        <h3 class="text-center fw-bold mb-4">üîç Conversion Preview</h3>
        <div class="d-flex justify-content-center align-items-start flex-wrap gap-5">
          <!-- Original -->
          <div class="preview-card text-center">
            <h4 class="fw-semibold mb-2">üì∑ Original</h4>
            <img
              src="/<%= originalImage %>"
              class="img-fluid rounded shadow-lg"
              style="max-width: 280px"
            />
          </div>
          <!-- Processed -->
          <div class="preview-card text-center">
            <h4 class="fw-semibold mb-2">‚ú® Converted (<%= selectedStyle %>)</h4>
            <img
              src="/<%= outputImage %>"
              class="img-fluid rounded shadow-lg"
              style="max-width: 280px"
            />
          </div>
        </div>

        <!-- Buttons -->
        <div class="text-center mt-4 d-flex justify-content-center gap-4 flex-wrap">
          <% if (user.plan !== "Free Plan" && (!user.planExpiry || new Date(user.planExpiry) > new Date())) { %>
          <a
            href="/<%= user.username %>/image/<%= img._id %>/download"
            class="btn btn-success btn-lg rounded-pill px-4"
          >
            ‚¨á Download
          </a>
          <% } else { %>
          <a
            href="/<%= user.username %>/pricing"
            class="btn btn-warning btn-lg rounded-pill px-4"
          >
            üîí Upgrade to Download
          </a>
          <% } %>

          <button
            class="btn btn-gradient btn-lg rounded-pill fw-bold px-5"
            onclick="shareImage('<%= outputImage %>')"
          >
            üì§ Share
          </button>
        </div>
      </div>
    </div>
  </div>
  <% } %>
</section>

<!-- Script -->
<script>
  function shareImage(imagePath) {
    const fullUrl = window.location.origin + "/" + imagePath;
    if (navigator.share) {
      navigator.share({
        title: "Check out my converted image!",
        text: "Here‚Äôs my image in a new style:",
        url: fullUrl,
      });
    } else {
      navigator.clipboard.writeText(fullUrl);
      alert("üîó Link copied to clipboard!");
    }
  }

  const styleOptions = document.getElementById("style-options");
  const selectedStyleInput = document.getElementById("selected-style");
  const methodRadios = document.querySelectorAll("input[name='method']");

  const styles = {
    manual: [
      { value: "pencil", text: "‚úè Pencil Art", img: "https://tse1.mm.bing.net/th/id/OIP.LN7ORfxEKCC48oKJGKrHSgAAAA?pid=Api&P=0&h=180" },
      { value: "cartoon", text: "üé® Cartoon", img: "https://tse1.mm.bing.net/th/id/OIP.rmn_5H5_tk9HFBhvk8t4pwHaEK?pid=Api&P=0&h=180" },
      { value: "grayscale", text: "üñ§ Grayscale", img: "https://tse1.mm.bing.net/th/id/OIP.QJn4rF9zjFfcyHDHaEF0PwHaJl?pid=Api&P=0&h=180" },
      { value: "sketch", text: "üñå Sketch Art", img: "https://tse2.mm.bing.net/th/id/OIP.VjM6vKii9E_vwlBN1-pCpAHaD2?pid=Api&P=0&h=180" },
      { value: "ghibli", text: "üå∏ Ghibli", img: "https://tse2.mm.bing.net/th/id/OIP.16wxaN4KcYZD-F0LlJiwBgHaEK?pid=Api&P=0&h=180" },
    ],
    ai: [
      { value: "cartoon", text: "üé® Cartoon", img: "https://tse1.mm.bing.net/th/id/OIP.rmn_5H5_tk9HFBhvk8t4pwHaEK?pid=Api&P=0&h=180" },
      { value: "ghibli", text: "üå∏ Ghibli", img: "https://tse2.mm.bing.net/th/id/OIP.16wxaN4KcYZD-F0LlJiwBgHaEK?pid=Api&P=0&h=180" },
      { value: "custom", text: "‚ú® Anime", img: "https://tse3.mm.bing.net/th/id/OIP.vEaHTRMtjD_bK5hetMGfJwHaF7?pid=Api&P=0&h=180" },
      { value: "dreamy", text: "üåô Dreamy", img: "https://tse3.mm.bing.net/th/id/OIP.qNedMJJahM7CmNlb10tQKgHaE8?pid=Api&P=0&h=180" },
    ],
  };

  function renderStyles(method) {
    styleOptions.innerHTML = "";
    const fullList = [...styles[method], ...styles[method]]; // duplicate for seamless loop
    fullList.forEach((s, idx) => {
      const card = document.createElement("div");
      card.className = "style-card";
      card.innerHTML = `
        <img src="${s.img}" alt="${s.text}" class="style-img"/>
        <p class="mt-2 mb-0 fw-semibold">${s.text}</p>
      `;
      card.addEventListener("click", () => {
        document.querySelectorAll(".style-card").forEach(c => c.classList.remove("selected"));
        card.classList.add("selected");
        selectedStyleInput.value = s.value;
      });
      styleOptions.appendChild(card);
    });
    if (styles[method][0]) {
      selectedStyleInput.value = styles[method][0].value;
      styleOptions.firstChild.classList.add("selected");
    }
  }

  methodRadios.forEach(radio => {
    radio.addEventListener("change", () => renderStyles(radio.value));
  });

  renderStyles("manual");
</script>

<!-- Styles -->
<style>
  .text-gradient {
    background: linear-gradient(90deg, #4e73df, #1cc88a);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
  .btn-gradient {
    background: linear-gradient(90deg, #4e73df, #1cc88a);
    border: none;
    color: white;
    transition: 0.3s ease-in-out;
  }
  .btn-gradient:hover {
    opacity: 0.9;
    transform: scale(1.05);
  }

  /* Toggle Button for Manual/AI */
  .method-toggle {
    display: flex;
    justify-content: center;
    gap: 20px;
  }
  .method-toggle input {
    display: none;
  }
  .toggle-card {
    cursor: pointer;
    border: 2px solid #e0e0e0;
    border-radius: 20px;
    padding: 20px 30px;
    min-width: 160px;
    transition: all 0.3s ease;
    font-weight: bold;
    display: flex;
    flex-direction: column;
    align-items: center;
    background: #fff;
  }
  .toggle-card .icon {
    font-size: 2.5rem; /* Bigger logos */
    margin-bottom: 8px;
    transition: transform 0.3s ease;
  }
  .method-toggle input:checked + .toggle-card {
    border-color: #1cc88a;
    box-shadow: 0 0 18px rgba(28, 200, 138, 0.6);
    transform: scale(1.08);
  }
  .method-toggle input:checked + .toggle-card .icon {
    animation: bounce 0.6s infinite alternate;
  }
  @keyframes bounce {
    from { transform: translateY(0); }
    to { transform: translateY(-5px); }
  }

  /* Styles Scroll like Headlines */
  .style-marquee {
    overflow: hidden;
    white-space: nowrap;
    width: 100%;
  }
  .style-marquee #style-options {
    display: inline-flex;
    animation: scrollStyles 15s linear infinite;
  }
  @keyframes scrollStyles {
    from { transform: translateX(0); }
    to { transform: translateX(-50%); }
  }

  /* Style cards fixed size */
  .style-card {
    width: 150px;
    height: 180px;
    cursor: pointer;
    text-align: center;
    border: 2px solid #e0e0e0;
    border-radius: 16px;
    padding: 12px;
    transition: all 0.3s ease;
    background: #fff;
    flex-shrink: 0;
  }
  .style-card.selected {
    border-color: #1cc88a;
    box-shadow: 0 0 18px rgba(28, 200, 138, 0.6);
    transform: scale(1.08);
  }
  .style-card:hover {
    border-color: #4e73df;
    transform: scale(1.1);
  }
  .style-img {
    width: 100%;
    height: 110px;
    object-fit: cover;
    border-radius: 10px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.2);
  }

  .preview-card img {
    transition: transform 0.3s ease;
  }
  .preview-card img:hover {
    transform: scale(1.05);
  }
</style>
